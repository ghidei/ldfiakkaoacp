INFO [ExampleSpec-akka.actor.default-dispatcher-4]  - Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] EventStream(akka://ExampleSpec) - logger log1-Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] EventStream(akka://ExampleSpec) - Default Loggers started
INFO [ExampleSpec-akka.actor.default-dispatcher-4]  - Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] EventStream(akka://ExampleSpec) - logger log1-Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] EventStream(akka://ExampleSpec) - Default Loggers started
INFO [ExampleSpec-akka.actor.default-dispatcher-3]  - Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] EventStream(akka://ExampleSpec) - logger log1-Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] EventStream(akka://ExampleSpec) - Default Loggers started
INFO [ExampleSpec-akka.actor.default-dispatcher-2]  - Slf4jLogger started
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Starting remoting
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] EventStream(akka://ExampleSpec) - logger log1-Slf4jLogger started
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] EventStream(akka://ExampleSpec) - Default Loggers started
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Starting remoting
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Starting remoting
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.Remoting - Starting remoting
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://ExampleSpec@localhost:37421]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://ExampleSpec@localhost:37421]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Starting up...
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://ExampleSpec@localhost:35491]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://ExampleSpec@localhost:35491]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Starting up...
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://ExampleSpec@localhost:33515]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://ExampleSpec@localhost:33515]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Registered cluster JMX MBean [akka:type=Cluster]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Started up successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Starting up...
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Metrics will be retreived from MBeans, and may be incorrect on some platforms. To increase metric accuracy add the 'sigar.jar' to the classpath and the appropriate platform-specific native libary to 'java.library.path'. Reason: java.lang.ClassNotFoundException: org.hyperic.sigar.Sigar
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Metrics collection has started successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - No seed-nodes configured, manual cluster join required
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Registered cluster JMX MBean [akka:type=Cluster]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Started up successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Metrics will be retreived from MBeans, and may be incorrect on some platforms. To increase metric accuracy add the 'sigar.jar' to the classpath and the appropriate platform-specific native libary to 'java.library.path'. Reason: java.lang.ClassNotFoundException: org.hyperic.sigar.Sigar
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Metrics collection has started successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://ExampleSpec@localhost:41371]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://ExampleSpec@localhost:41371]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - No seed-nodes configured, manual cluster join required
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Starting up...
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Registered cluster JMX MBean [akka:type=Cluster]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Started up successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Metrics will be retreived from MBeans, and may be incorrect on some platforms. To increase metric accuracy add the 'sigar.jar' to the classpath and the appropriate platform-specific native libary to 'java.library.path'. Reason: java.lang.ClassNotFoundException: org.hyperic.sigar.Sigar
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Metrics collection has started successfully
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - No seed-nodes configured, manual cluster join required
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a] open
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] bound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b] open
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - connected to localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - connection from /127.0.0.1:44750
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - connection from /127.0.0.1:44752
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] bound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - connected to /127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] written 55
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Registered cluster JMX MBean [akka:type=Cluster]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Started up successfully
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] written 55
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Metrics will be retreived from MBeans, and may be incorrect on some platforms. To increase metric accuracy add the 'sigar.jar' to the classpath and the appropriate platform-specific native libary to 'java.library.path'. Reason: java.lang.ClassNotFoundException: org.hyperic.sigar.Sigar
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Metrics collection has started successfully
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8] open
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - No seed-nodes configured, manual cluster join required
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] bound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - connected to localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] written 55
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44752: Hello(server1,akka.tcp://ExampleSpec@localhost:37421)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44750: Hello(server3,akka.tcp://ExampleSpec@localhost:35491)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - connection from /127.0.0.1:44754
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44754: Hello(server2,akka.tcp://ExampleSpec@localhost:33515)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96] open
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - connection from /127.0.0.1:44756
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] bound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - connected to localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: Hello(client1,akka.tcp://ExampleSpec@localhost:41371)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 55
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from /127.0.0.1:4711: Done
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/TestConductorClient - received Done: starting test
INFO [ExampleSpec-akka.actor.default-dispatcher-3] ExampleSpecMultiJvmNode1(akka://ExampleSpec) - Role [server1] started with address [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: Done
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/TestConductorClient - received Done: starting test
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: Done
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: Done
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/TestConductorClient - received Done: starting test
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:41371/user/TestConductorClient - received Done: starting test
INFO [ExampleSpec-akka.actor.default-dispatcher-2] ExampleSpecMultiJvmNode3(akka://ExampleSpec) - Role [server3] started with address [akka.tcp://ExampleSpec@localhost:35491]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] ExampleSpecMultiJvmNode4(akka://ExampleSpec) - Role [client1] started with address [akka.tcp://ExampleSpec@localhost:41371]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] ExampleSpecMultiJvmNode2(akka://ExampleSpec) - Role [server2] started with address [akka.tcp://ExampleSpec@localhost:33515]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44752: GetAddress(RoleName(server1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from /127.0.0.1:4711: AddressReply(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421)
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - Starting new Raft member, will wait for raft cluster configuration...
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Node [akka.tcp://ExampleSpec@localhost:37421] is JOINING, roles [raft]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Leader is moving node [akka.tcp://ExampleSpec@localhost:37421] to [Up]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Starting new Raft member, will wait for raft cluster configuration...
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - receive unhandled request ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]) in state Init, 
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:37421. 1 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka://ExampleSpec/user/batching-server#1119783263]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - now init add member
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44754: GetAddress(RoleName(server1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421)
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - Starting new Raft member, will wait for raft cluster configuration...
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Starting new Raft member, will wait for raft cluster configuration...
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#1153104906]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#1153104906]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - receive unhandled request ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#1153104906]) in state Init, 
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44750: GetAddress(RoleName(server1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421)
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - Starting new Raft member, will wait for raft cluster configuration...
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Starting new Raft member, will wait for raft cluster configuration...
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#-509575979]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-509575979]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:33515]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - receive unhandled request ClusterListenerIs(Actor[akka://ExampleSpec/user/raft-cluster#-509575979]) in state Init, 
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:33515] -> [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.InternalClusterAction$Join]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:35491]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:35491] -> [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.InternalClusterAction$Join]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Node [akka.tcp://ExampleSpec@localhost:33515] is JOINING, roles [raft]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Node [akka.tcp://ExampleSpec@localhost:35491] is JOINING, roles [raft]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.InternalClusterAction$Welcome]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipEnvelope]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Leader is moving node [akka.tcp://ExampleSpec@localhost:33515] to [Up]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Leader is moving node [akka.tcp://ExampleSpec@localhost:35491] to [Up]
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:33515. 2 nodes in cluster
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.Identify]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Welcome from [akka.tcp://ExampleSpec@localhost:37421]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:35491. 3 nodes in cluster
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipEnvelope]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Welcome from [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipEnvelope]
WARN [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:37421. 1 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:37421. 1 nodes in cluster
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:35491] -> [akka.tcp://ExampleSpec@localhost:33515]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:33515] <- [akka.tcp://ExampleSpec@localhost:35491]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.Identify]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.ActorIdentity]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.ActorIdentity]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.Identify]
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#1153104906]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now init add member
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
WARN [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.ActorIdentity]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - now init add member
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-509575979]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - now init add member
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
WARN [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:33515. 2 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:33515. 2 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:35491. 3 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - Member is Up: akka.tcp://ExampleSpec@localhost:35491. 3 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka://ExampleSpec/user/batching-server#-1739729635]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#1153104906]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now init add member
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka://ExampleSpec/user/batching-server#-615643665]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-509575979]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - now init add member
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-509575979]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - now init add member
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - change to Follower state
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(BeginAsFollower(Term(0),Actor[akka://ExampleSpec/user/batching-server#-615643665]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-615643665]
WARN [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - actorIdentity excuted
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Begin as follower
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#1153104906]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now init add member
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - change to Follower state
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(BeginAsFollower(Term(0),Actor[akka://ExampleSpec/user/batching-server#-1739729635]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Begin as follower
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(RaftMemberAdded(Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/raft-cluster#-1922479229]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - now init add member
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - change to Follower state
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(BeginAsFollower(Term(0),Actor[akka://ExampleSpec/user/batching-server#1119783263]),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#1119783263]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Begin as follower
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$Heartbeat]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$HeartbeatRsp]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$HeartbeatRsp]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipStatus]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipStatus]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$Heartbeat]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$HeartbeatRsp]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$Heartbeat]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (raft-cluster-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] written 31
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44752: EnterBarrier(raft-cluster-up,Some(29998239116 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (raft-cluster-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] written 31
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44754: EnterBarrier(raft-cluster-up,Some(29998972018 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),raft-cluster-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372470692998800 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (raft-cluster-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 31
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: EnterBarrier(raft-cluster-up,Some(29998770537 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),raft-cluster-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372470692998800 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (raft-cluster-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] written 31
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44750: EnterBarrier(raft-cluster-up,Some(29998913528 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),raft-cluster-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372470692998800 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from /127.0.0.1:4711: BarrierResult(raft-cluster-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier raft-cluster-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(raft-cluster-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(raft-cluster-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier raft-cluster-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier raft-cluster-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(raft-cluster-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier raft-cluster-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: GetAddress(RoleName(server1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421)
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - Starting new Raft member, will wait for raft cluster configuration...
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.InternalClusterAction$Join]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Node [akka.tcp://ExampleSpec@localhost:41371] is JOINING, roles [user]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Welcome from [akka.tcp://ExampleSpec@localhost:37421]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipEnvelope]
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - Member is Up: akka.tcp://ExampleSpec@localhost:33515. 1 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - Member is Up: akka.tcp://ExampleSpec@localhost:35491. 2 nodes in cluster
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - Member is Up: akka.tcp://ExampleSpec@localhost:37421. 3 nodes in cluster
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:33515] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:33515]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [akka.actor.Identify]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.Remoting - Associated [akka.tcp://ExampleSpec@localhost:35491] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-2/endpointWriter - Associated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:35491]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-2/endpointWriter - Drained buffer with maxWriteCount: 50, fullBackoffCount: 1, smallBackoffCount: 0, noBackoffCount: 0 , adaptiveBackoff: 1000
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:41371,483661826)]
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - actorIdentity excuted
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - actorIdentity excuted
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - actorIdentity excuted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(StateTimeout,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now follower timeout
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - send startelection to myself
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(StartElectionEvent,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now start election
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now send request everywhere
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(VoteGranted(Term(1)),Data(Log(0,List()),Term(1),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now might become leader in term Term(1), votes number:1
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.RequestVoteRPC] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.RequestVoteRPC]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(RequestVoteRPC(Term(1),Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635],1,Term(0)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Vote granted
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(RequestVoteRPC(Term(1),Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635],1,Term(0)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Vote granted
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.VoteGranted] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.VoteGranted]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(VoteGranted(Term(0)),Data(Log(0,List()),Term(1),Set(),None,1)) from Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.VoteGranted] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - now might become leader in term Term(1), votes number:2
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.VoteGranted]
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Actor[akka://ExampleSpec/user/batching-server#-1739729635] is going to become leader
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(VoteGranted(Term(0)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - receive unhandled request VoteGranted(Term(0)) in state Leader, 
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
WARN [ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.AppendEntriesRPC] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.AppendEntriesRPC]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.MetricsGossipEnvelope]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.MetricsGossipEnvelope]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.MetricsGossipEnvelope]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$HeartbeatRsp]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipStatus]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.cluster.Cluster(akka://ExampleSpec) - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Leader is moving node [akka.tcp://ExampleSpec@localhost:41371] to [Up]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/raft-cluster - Some user might connected
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.MetricsGossipEnvelope]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:41371,483661826)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/user/raft-cluster-for-client - Some user might connected
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:41371,483661826)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.ClusterHeartbeatSender$Heartbeat]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/raft-cluster - Some user might connected
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/raft-cluster - Some user might connected
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:35491] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:33515,-1194923349)]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:33515] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:35491,765687956)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.cluster.protobuf.ClusterMessageSerializer] for message [akka.cluster.GossipStatus]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (all-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] written 22
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (all-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44752: EnterBarrier(all-up,Some(29999972095 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (all-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] written 22
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] written 22
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44750: EnterBarrier(all-up,Some(29999964006 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44754: EnterBarrier(all-up,Some(29999966337 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),all-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372472818931737 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),all-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372472818931737 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (all-up)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 22
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: EnterBarrier(all-up,Some(29999974921 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),all-up,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]),Deadline(372472818931737 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from /127.0.0.1:4711: BarrierResult(all-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(all-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(all-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(all-up,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier all-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (twitter example finished)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier all-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier all-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (twitter example finished)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier all-up
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 => localhost/127.0.0.1:4711] written 41
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (twitter example finished)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 => localhost/127.0.0.1:4711] written 41
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: GetAddress(RoleName(client1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 => /127.0.0.1:4711] written 41
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44750: EnterBarrier(twitter example finished,Some(999999982066 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44754: EnterBarrier(twitter example finished,Some(999999970356 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44752: EnterBarrier(twitter example finished,Some(999999983136 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),twitter example finished,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]),Deadline(373442832488384 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),twitter example finished,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]),Deadline(373442832488384 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: GetAddress(RoleName(server1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: GetAddress(RoleName(server2))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 15
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: GetAddress(RoleName(server3))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: AddressReply(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491)
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - receive CRDT message
WARN [ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.MUpdateFromClient] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.MUpdateFromClient]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(MUpdateFromClient(FollowerEntry(user1,user1),add,VectorTime(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635] -> 1)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - item add CRDT Updates
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.MUpdateFromServer] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.MUpdateFromServer]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.CvSucc$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.CvSucc$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(MUpdateFromServer(Map(user1 -> Set(user1)),VectorTime(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635] -> 1)),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(MUpdateFromServer(Map(user1 -> Set(user1)),VectorTime(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635] -> 1)),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:37421] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:41371,483661826)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:41371/system/cluster/core/daemon - Cluster Node [akka.tcp://ExampleSpec@localhost:41371] - Receiving gossip from [UniqueAddress(akka.tcp://ExampleSpec@localhost:37421,1299068379)]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.StartMessage$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.StartMessage$]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(StartMessage,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.StartReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.StartReady$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(StartMessage,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.StartReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.StartReady$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(StartMessage,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.StartReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.StartReady$]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - receive CRDT message
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - send tweet message
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - rServer is defined
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - receive raft message
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - rServer is defined
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$UpdateTweet] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$UpdateTweet]
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$ReadTwitter] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$ReadTwitter]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(MUpdateFromClient(FollowerEntry(user1,user1),add,VectorTime(Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263] -> 2)),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - item add CRDT Updates
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - add to mState: FollowerEntry(user1,user1)
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.MUpdateFromServer] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.MUpdateFromServer]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.CvSucc$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.CvSucc$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(MUpdateFromServer(Map(user1 -> Set(user1)),VectorTime(Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263] -> 2)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(MUpdateFromServer(Map(user1 -> Set(user1)),VectorTime(Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263] -> 2)),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.Resend] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.Resend]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(UpdateTweet(Map(user1 -> tweet from user 1)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - leader:Actor[akka://ExampleSpec/user/batching-server#-1739729635] receive updatetweet
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - updateTweet sending around
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - leader receive nonmonupdate from client inside OACP
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - state changed
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - clientRef: Some(Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859])
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.Gather$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-17] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.Gather$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(Gather,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - mState:Map(user1 -> Set(user1))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(Gather,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - data.log.mState: None
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - mState:Map(user1 -> Set(user1))
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - Get message from Follower or Candidate
WARN [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:41371/user/twitter-client - resend msg: ReadTwitter(user1)
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$CollectReply] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$CollectReply]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - data.log.mState: None
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$CollectReply] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$CollectReply]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(CollectReply(Map(user1 -> Set(user1))),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - collect reply from other replicas
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(CollectReply(Map(user1 -> Set(user1))),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - collect reply from other replicas
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(NMUpdateFromTwitter(Map(user1 -> tweet from user 1)),Data(Log(0,List()),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - leader receive nonmonupdate from client
WARN [ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.Freeze$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.Freeze$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(Freeze,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(Freeze,Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Receive AppendEntriesRPC from leader Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - msg.prevLogIndex: 1, replicatedLog.termAt: Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)),0),Data(Log(0,List()),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - append about to happen
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Receive AppendEntriesRPC from leader Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - append msg.entries: List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)), replicatedLog.entries.length: 0
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - msg.prevLogIndex: 1, replicatedLog.termAt: Term(0)
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - append about to happen
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - replicatedLog in follower: 2
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - AppendEntriesSuccess send by Followers
WARN [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - replciatedLog.lastIndex: 2
WARN [ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.AppendEntriesSuccess] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.AppendEntriesSuccess]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - append msg.entries: List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)), replicatedLog.entries.length: 0
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - replicatedLog in follower: 2
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - AppendEntriesSuccess send by Followers
WARN [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - replciatedLog.lastIndex: 2
WARN [ExampleSpec-akka.actor.default-dispatcher-19] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.AppendEntriesSuccess] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.AppendEntriesSuccess]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),0),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(AppendEntriesSuccess(Term(0),2),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Follower Actor[akka.tcp://ExampleSpec@localhost:35491/user/batching-server#-615643665] took write
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - msg.lastIndex: 2, replicatedLog.lastIndex: 2
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - msg.lastIndex: 2
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - ignore the comming message, Num: 0
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(AppendEntriesSuccess(Term(0),2),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Follower Actor[akka.tcp://ExampleSpec@localhost:37421/user/batching-server#1119783263] took write
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - msg.lastIndex: 2, replicatedLog.lastIndex: 2
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - msg.lastIndex: 2
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - send success
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - auto melting for every other servers
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - send write log to self
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),1),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Meet leaderCommit > commitIndex condition
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),1),Data(Log(0,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - auto melting for every other servers
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(WriteLog(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)))),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka://ExampleSpec/user/batching-server#1119783263]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Meet leaderCommit > commitIndex condition
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - write to log as a follower
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - auto melting for every other servers
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(WriteLog(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)))),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka://ExampleSpec/user/batching-server#-615643665]
WARN [ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - write to log as a follower
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(WriteLog(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None)))),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/user/batching-server#-1739729635]
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - write to log as a leader
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(ReadTwitter(user1),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/user/twitter-client#-36856859]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),1),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:35491/user/batching-server - Empty Heartbeat: List()
WARN [ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$TwitterIs] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.twitter.protocol.TwitterLikeProtocol$TwitterIs]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),1),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
WARN [ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.EndMessage$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.EndMessage$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(EndMessage,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.EndReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.EndReady$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(EndMessage,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.EndReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.EndReady$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/user/batching-server -  received handled message Event(EndMessage,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:41371/system/testActor-1#-356320791]
WARN [ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using the default Java serializer for class [se.kth.csc.progsys.oacp.protocol.EndReady$] which is not recommended because of performance implications. Use another serializer or disable this warning using the setting 'akka.actor.warn-about-java-serializer-usage'
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.serialization.Serialization(akka://ExampleSpec) - Using serializer [akka.serialization.JavaSerializer] for message [se.kth.csc.progsys.oacp.protocol.EndReady$]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.actor.ActorSystemImpl(ExampleSpec) - entering barriers (twitter example finished)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 => localhost/127.0.0.1:4711] written 41
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - message from /127.0.0.1:44756: EnterBarrier(twitter example finished,Some(999999986204 nanoseconds))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:37421/user/controller/barriers - handleBarrier(Data(Set(NodeInfo(RoleName(server1),akka.tcp://ExampleSpec@localhost:37421,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164]), NodeInfo(RoleName(server3),akka.tcp://ExampleSpec@localhost:35491,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]), NodeInfo(RoleName(server2),akka.tcp://ExampleSpec@localhost:33515,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733]), NodeInfo(RoleName(client1),akka.tcp://ExampleSpec@localhost:41371,Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055])),twitter example finished,List(Actor[akka://ExampleSpec/user/controller/127.0.0.1:44756-server4#-2084595055], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44754-server3#-1023035733], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164], Actor[akka://ExampleSpec/user/controller/127.0.0.1:44750-server1#-40156003]),Deadline(373442832488384 nanoseconds)))
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from /127.0.0.1:4711: BarrierResult(twitter example finished,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(twitter example finished,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(twitter example finished,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - message from localhost/127.0.0.1:4711: BarrierResult(twitter example finished,true)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier twitter example finished
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier twitter example finished
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier twitter example finished
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.actor.ActorSystemImpl(ExampleSpec) - passed barrier twitter example finished
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server -  received handled message Event(SendHeartBeat,Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),None,0)) from Actor[akka://ExampleSpec/deadLetters]
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/user/batching-server - Im leader in term Term(0)
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server -  received handled message Event(AppendEntriesRPC(Term(0),1,Term(0),List(),1),Data(Log(1,List(Entry(Some(Map(user1 -> Set(user1))),Some(Map(user1 -> tweet from user 1)),Term(0),2,None))),Term(0),Set(),Some(Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]),0)) from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635]
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:37421/user/batching-server - Empty Heartbeat: List()
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - disconnected from localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - disconnect from /127.0.0.1:44754
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0x33c033f8, /127.0.0.1:44754 :> localhost/127.0.0.1:4711] unbound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - disconnect from /127.0.0.1:44756
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - disconnected from localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xb52b8c96, /127.0.0.1:44756 :> localhost/127.0.0.1:4711] unbound
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/remoting-terminator - Shutting down remote daemon.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - disconnect from /127.0.0.1:44750
INFO [ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:33515] -> [akka.tcp://ExampleSpec@localhost:37421]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka://ExampleSpec/user/batching-server - Message [se.kth.csc.progsys.oacp.protocol.AppendEntriesRPC] from Actor[akka.tcp://ExampleSpec@localhost:33515/user/batching-server#-1739729635] to Actor[akka://ExampleSpec/user/batching-server#-615643665] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - disconnected from localhost/127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 :> localhost/127.0.0.1:4711] unbound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-2] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xfc4f369a, /127.0.0.1:44750 :> localhost/127.0.0.1:4711] closed
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/system/remoting-terminator - Shutting down remote daemon.
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka.tcp://ExampleSpec@localhost:35491/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/remoting-terminator - Shutting down remote daemon.
INFO [ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:33515] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-16] akka.tcp://ExampleSpec@localhost:33515/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:33515] <- [akka.tcp://ExampleSpec@localhost:35491]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-2/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:35491]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:35491] -> [akka.tcp://ExampleSpec@localhost:37421]
ERROR[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-0/endpointWriter - AssociationError [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:33515]: Error [Shut down address: akka.tcp://ExampleSpec@localhost:33515] [
akka.remote.ShutDownAssociation: Shut down address: akka.tcp://ExampleSpec@localhost:33515
Caused by: akka.remote.transport.Transport$InvalidAssociationException: The remote system terminated the association because it is shutting down.
]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A37421-0/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:37421]
ERROR[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter - AssociationError [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:35491]: Error [Shut down address: akka.tcp://ExampleSpec@localhost:35491] [
akka.remote.ShutDownAssociation: Shut down address: akka.tcp://ExampleSpec@localhost:35491
Caused by: akka.remote.transport.Transport$InvalidAssociationException: The remote system terminated the association because it is shutting down.
]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-18] akka.tcp://ExampleSpec@localhost:41371/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:41371] -> [akka.tcp://ExampleSpec@localhost:33515]
ERROR[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter - AssociationError [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:41371]: Error [Shut down address: akka.tcp://ExampleSpec@localhost:41371] [
akka.remote.ShutDownAssociation: Shut down address: akka.tcp://ExampleSpec@localhost:41371
Caused by: akka.remote.transport.Transport$InvalidAssociationException: The remote system terminated the association because it is shutting down.
]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:35491] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.tcp://ExampleSpec@localhost:35491/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-1/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:35491] -> [akka.tcp://ExampleSpec@localhost:33515]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Remote system with address [akka.tcp://ExampleSpec@localhost:41371] has shut down. Address is now gated for 5000 ms, all messages to this address will be delivered to dead letters.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Remote system with address [akka.tcp://ExampleSpec@localhost:33515] has shut down. Address is now gated for 5000 ms, all messages to this address will be delivered to dead letters.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.remote.Remoting - Remote system with address [akka.tcp://ExampleSpec@localhost:35491] has shut down. Address is now gated for 5000 ms, all messages to this address will be delivered to dead letters.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:41371]
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A33515-0/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:33515]
INFO [ExampleSpec-akka.actor.default-dispatcher-4] akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter - Message [akka.remote.EndpointWriter$AckIdleCheckTimer$] from Actor[akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter#-1178879970] to Actor[akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A41371-2/endpointWriter#-1178879970] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-4] akka.tcp://ExampleSpec@localhost:37421/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter - Disassociated [akka.tcp://ExampleSpec@localhost:37421] <- [akka.tcp://ExampleSpec@localhost:35491]
INFO [ExampleSpec-akka.actor.default-dispatcher-2] akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter - Message [akka.remote.EndpointWriter$AckIdleCheckTimer$] from Actor[akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter#-1268054153] to Actor[akka://ExampleSpec/system/endpointManager/reliableEndpointWriter-akka.tcp%3A%2F%2FExampleSpec%40localhost%3A35491-1/endpointWriter#-1268054153] was not delivered. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.remote.Remoting - Remoting shut down
INFO [ExampleSpec-akka.actor.default-dispatcher-20] akka.tcp://ExampleSpec@localhost:33515/system/remoting-terminator - Remoting shut down.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-20] EventStream - shutting down: StandardOutLogger started
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting shut down
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:35491/system/remoting-terminator - Remoting shut down.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] EventStream - shutting down: StandardOutLogger started
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.remote.Remoting - Remoting shut down
INFO [ExampleSpec-akka.actor.default-dispatcher-3] akka.tcp://ExampleSpec@localhost:41371/system/remoting-terminator - Remoting shut down.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.ConductorHandler(akka://ExampleSpec) - disconnect from /127.0.0.1:44752
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - disconnected from /127.0.0.1:4711
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 :> /127.0.0.1:4711] unbound
DEBUG[ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.testconductor.PlayerHandler(akka://ExampleSpec) - channel [id: 0xd7bf237b, /127.0.0.1:44752 :> /127.0.0.1:4711] closed
INFO [ExampleSpec-akka.actor.default-dispatcher-15] akka://ExampleSpec/user/controller/127.0.0.1:44752-server2 - Message [akka.remote.testconductor.Controller$ClientDisconnected$] from Actor[akka://ExampleSpec/deadLetters] to Actor[akka://ExampleSpec/user/controller/127.0.0.1:44752-server2#1094195164] was not delivered. [3] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/system/remoting-terminator - Shutting down remote daemon.
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/system/remoting-terminator - Remote daemon shut down; proceeding with flushing remote transports.
INFO [ExampleSpec-akka.actor.default-dispatcher-19] akka.remote.Remoting - Remoting shut down
INFO [ExampleSpec-akka.actor.default-dispatcher-17] akka.tcp://ExampleSpec@localhost:37421/system/remoting-terminator - Remoting shut down.
DEBUG[ExampleSpec-akka.actor.default-dispatcher-3] EventStream - shutting down: StandardOutLogger started
